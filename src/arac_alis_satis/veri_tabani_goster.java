/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arac_alis_satis;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class veri_tabani_goster extends javax.swing.JFrame {

    /**
     * Creates new form veri_tabani_goster
     */
    public veri_tabani_goster() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_tablolar = new javax.swing.JTable();
        lbl_resim = new javax.swing.JLabel();
        lbl_veri_tabani = new javax.swing.JLabel();
        lbl_tablo_Sec = new javax.swing.JLabel();
        cmb_tablolar = new javax.swing.JComboBox<>();

        tbl_tablolar.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jScrollPane1.setViewportView(tbl_tablolar);

        lbl_resim.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\arac_alis_satis\\if_data_115746.png")); // NOI18N

        lbl_veri_tabani.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        lbl_veri_tabani.setForeground(new java.awt.Color(51, 51, 51));
        lbl_veri_tabani.setText("VERİ TABANI");

        lbl_tablo_Sec.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_tablo_Sec.setForeground(new java.awt.Color(51, 51, 51));
        lbl_tablo_Sec.setText("Tablo seç : ");

        cmb_tablolar.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmb_tablolar.setForeground(new java.awt.Color(51, 51, 51));
        cmb_tablolar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tbl_ilan", "tbl_araba", "tbl_renk", "tbl_sehir", "tbl_vites_turu", "tbl_yakit_turu" }));
        cmb_tablolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_tablolarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_resim, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_veri_tabani))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_tablo_Sec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_tablolar, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(296, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_resim, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_veri_tabani)
                        .addGap(31, 31, 31)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tablo_Sec)
                    .addComponent(cmb_tablolar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_tablolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tablolarActionPerformed
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        
        if(cmb_tablolar.getSelectedItem().toString()=="tbl_ilan"){
           try(ResultSet rs =stm.executeQuery("Select * from tbl_ilan")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
        }
           
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_araba"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_araba")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_renk"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_renk")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_sehir"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_sehir")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_vites_turu"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_vites_turu")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_yakit_turu"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_yakit_turu")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
        }
        }
        c.close();
        } catch (ClassNotFoundException ex ) {
            Logger.getLogger(veri_tabani_goster.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(veri_tabani_goster.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmb_tablolarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(veri_tabani_goster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(veri_tabani_goster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(veri_tabani_goster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(veri_tabani_goster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new veri_tabani_goster().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JComboBox<String> cmb_tablolar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_resim;
    private javax.swing.JLabel lbl_tablo_Sec;
    private javax.swing.JLabel lbl_veri_tabani;
    private javax.swing.JTable tbl_tablolar;
    // End of variables declaration//GEN-END:variables
}
