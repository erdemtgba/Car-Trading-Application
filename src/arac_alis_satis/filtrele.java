/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arac_alis_satis;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class filtrele extends javax.swing.JFrame {

    /**
     * Creates new form filtrele
     */
    public filtrele() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_veri_tabani_goruntule = new javax.swing.JButton();
        lbl_resim = new javax.swing.JLabel();
        lbl_filtrele = new javax.swing.JLabel();
        btn_filtrele = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_tablolar = new javax.swing.JTable();
        cb_az = new javax.swing.JCheckBox();
        cb_za = new javax.swing.JCheckBox();
        cmb_sehir = new javax.swing.JComboBox<>();
        lbl_1 = new javax.swing.JLabel();
        lbl_2 = new javax.swing.JLabel();
        lbl_3 = new javax.swing.JLabel();
        lbl_4 = new javax.swing.JLabel();
        cmb_yakit_turu = new javax.swing.JComboBox<>();
        cmb_vites_turu = new javax.swing.JComboBox<>();
        cmb_renk = new javax.swing.JComboBox<>();
        lbl_5 = new javax.swing.JLabel();
        txt_f_min = new javax.swing.JTextField();
        lbl_6 = new javax.swing.JLabel();
        txt_f_max = new javax.swing.JTextField();
        lbl_7 = new javax.swing.JLabel();
        cmb_tarih = new javax.swing.JComboBox<>();
        txt_km_max = new javax.swing.JTextField();
        lbl_8 = new javax.swing.JLabel();
        txt_km_min = new javax.swing.JTextField();
        lbl_9 = new javax.swing.JLabel();
        btn_f_belirle = new javax.swing.JButton();
        btn_km_belirle = new javax.swing.JButton();

        btn_veri_tabani_goruntule.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btn_veri_tabani_goruntule.setForeground(new java.awt.Color(51, 51, 51));
        btn_veri_tabani_goruntule.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\arac_alis_satis\\if_document-open_118911.png")); // NOI18N
        btn_veri_tabani_goruntule.setText("VERİ TABANI GÖRÜNTÜLE");
        btn_veri_tabani_goruntule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_veri_tabani_goruntuleActionPerformed(evt);
            }
        });

        lbl_resim.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\arac_alis_satis\\if_filter_settings_103543.png")); // NOI18N

        lbl_filtrele.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        lbl_filtrele.setForeground(new java.awt.Color(51, 51, 51));
        lbl_filtrele.setText("FİLTRELEME");

        btn_filtrele.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btn_filtrele.setForeground(new java.awt.Color(51, 51, 51));
        btn_filtrele.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\arac_alis_satis\\if_Filter_1214961.png")); // NOI18N
        btn_filtrele.setText("FİLTRELE");
        btn_filtrele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_filtreleActionPerformed(evt);
            }
        });

        tbl_tablolar.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jScrollPane1.setViewportView(tbl_tablolar);

        cb_az.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cb_az.setForeground(new java.awt.Color(51, 51, 51));
        cb_az.setText("a-z");
        cb_az.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_azActionPerformed(evt);
            }
        });

        cb_za.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cb_za.setText("z-a");
        cb_za.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_zaActionPerformed(evt);
            }
        });

        cmb_sehir.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmb_sehir.setForeground(new java.awt.Color(51, 51, 51));
        cmb_sehir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "adana", "ankara", "antalya", "balıkesir", "bursa", "çanakkale", "çorum", "erzincan", "eskişehir", "mersin", "istanbul", "kocaeli", "kütahya", "malatya", "sakarya", "sivas", "yozgat", "düzce" }));
        cmb_sehir.setToolTipText("");
        cmb_sehir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_sehirActionPerformed(evt);
            }
        });

        lbl_1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_1.setForeground(new java.awt.Color(51, 51, 51));
        lbl_1.setText("Şehir seç      : ");

        lbl_2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_2.setForeground(new java.awt.Color(51, 51, 51));
        lbl_2.setText("Yakit türü seç : ");

        lbl_3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_3.setForeground(new java.awt.Color(51, 51, 51));
        lbl_3.setText("Vites türü seç : ");

        lbl_4.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_4.setForeground(new java.awt.Color(51, 51, 51));
        lbl_4.setText("Renk seç       : ");

        cmb_yakit_turu.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmb_yakit_turu.setForeground(new java.awt.Color(51, 51, 51));
        cmb_yakit_turu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "benzin", "dizel", "lpg", "elektrik", "hybrid" }));
        cmb_yakit_turu.setToolTipText("");
        cmb_yakit_turu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_yakit_turuActionPerformed(evt);
            }
        });

        cmb_vites_turu.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmb_vites_turu.setForeground(new java.awt.Color(51, 51, 51));
        cmb_vites_turu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "manuel", "yarı otomatik", "otomatik" }));
        cmb_vites_turu.setToolTipText("");
        cmb_vites_turu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_vites_turuActionPerformed(evt);
            }
        });

        cmb_renk.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmb_renk.setForeground(new java.awt.Color(51, 51, 51));
        cmb_renk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "beyaz", "siyah", "uzay grisi", "turuncu", "gold", "mat siyah", "sarı", "pembe", "kırmızı", "lacivert", "mavi", "mor", "bordo", "yeşil", "turkuaz" }));
        cmb_renk.setToolTipText("");
        cmb_renk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_renkActionPerformed(evt);
            }
        });

        lbl_5.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_5.setForeground(new java.awt.Color(51, 51, 51));
        lbl_5.setText("Fiyat Aralığı  : ");

        txt_f_min.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txt_f_min.setForeground(new java.awt.Color(51, 51, 51));

        lbl_6.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_6.setForeground(new java.awt.Color(51, 51, 51));
        lbl_6.setText("-");

        txt_f_max.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txt_f_max.setForeground(new java.awt.Color(51, 51, 51));

        lbl_7.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_7.setForeground(new java.awt.Color(51, 51, 51));
        lbl_7.setText("Tarih  seç     : ");

        cmb_tarih.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmb_tarih.setForeground(new java.awt.Color(51, 51, 51));
        cmb_tarih.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "son 24 saat", "son 1 hafta", "son 1 ay" }));
        cmb_tarih.setToolTipText("");
        cmb_tarih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_tarihActionPerformed(evt);
            }
        });

        txt_km_max.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txt_km_max.setForeground(new java.awt.Color(51, 51, 51));

        lbl_8.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_8.setForeground(new java.awt.Color(51, 51, 51));
        lbl_8.setText("Km Aralığı     : ");
        lbl_8.setToolTipText("");

        txt_km_min.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txt_km_min.setForeground(new java.awt.Color(51, 51, 51));

        lbl_9.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_9.setForeground(new java.awt.Color(51, 51, 51));
        lbl_9.setText("-");

        btn_f_belirle.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btn_f_belirle.setForeground(new java.awt.Color(51, 51, 51));
        btn_f_belirle.setText("sırala");
        btn_f_belirle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_f_belirleActionPerformed(evt);
            }
        });

        btn_km_belirle.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btn_km_belirle.setForeground(new java.awt.Color(51, 51, 51));
        btn_km_belirle.setText("sırala");
        btn_km_belirle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_km_belirleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_veri_tabani_goruntule)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(lbl_resim, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_filtrele))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(cb_az)
                                .addGap(37, 37, 37)
                                .addComponent(cb_za))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_f_min, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbl_6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_f_max, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_f_belirle))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmb_yakit_turu, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmb_vites_turu, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmb_renk, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmb_sehir, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmb_tarih, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_km_min, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbl_9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_km_max, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_km_belirle))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(btn_filtrele)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_resim, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(lbl_filtrele)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_az)
                            .addComponent(cb_za))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_sehir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_2)
                            .addComponent(cmb_yakit_turu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_3)
                            .addComponent(cmb_vites_turu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_4)
                            .addComponent(cmb_renk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_7)
                            .addComponent(cmb_tarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_5)
                            .addComponent(txt_f_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_f_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_f_belirle))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_8)
                            .addComponent(txt_km_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_km_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_km_belirle))
                        .addGap(33, 33, 33)
                        .addComponent(btn_filtrele, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(btn_veri_tabani_goruntule, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_veri_tabani_goruntuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_veri_tabani_goruntuleActionPerformed
        veri_tabani_goster vt=new veri_tabani_goster();
        vt.setTitle("VERİ TABANI");
        vt.setLocationRelativeTo(null);
        vt.setVisible(true);
    }//GEN-LAST:event_btn_veri_tabani_goruntuleActionPerformed

    private void btn_filtreleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_filtreleActionPerformed
        
        
    }//GEN-LAST:event_btn_filtreleActionPerformed

    private void cmb_sehirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_sehirActionPerformed
        String sehir=cmb_sehir.getSelectedItem().toString();
        String query="";
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        if(cb_az.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN (select ilan_araba_id from tbl_ilan where ilan_sehir_id IN(select sehir_id from tbl_sehir where sehir='"
                + sehir +"') ) ORDER BY araba_id ASC";
        }
        else if(cb_za.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN (select ilan_araba_id from tbl_ilan where ilan_sehir_id IN(select sehir_id from tbl_sehir where sehir='"
                + sehir +"') ) ORDER BY araba_id DESC";
        }
        else{
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN (select ilan_araba_id from tbl_ilan where ilan_sehir_id IN(select sehir_id from tbl_sehir where sehir='"
                + sehir +"') )";
        }
           
        try(ResultSet rs =stm.executeQuery(query)){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            c.close();
        
        }
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        }
    }//GEN-LAST:event_cmb_sehirActionPerformed

    private void cmb_yakit_turuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_yakit_turuActionPerformed
        String yakitT=cmb_yakit_turu.getSelectedItem().toString();
        String query="";
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        if(cb_az.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_yakit_turu_id IN(Select yakit_turu_id from tbl_yakit_turu where yakit_turu='"+yakitT+"')"
                    + " ORDER BY araba_id ASC";
        }   
        else if(cb_za.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_yakit_turu_id IN(Select yakit_turu_id from tbl_yakit_turu where yakit_turu='"+yakitT+"')"
                    + " ORDER BY araba_id DESC";
        }
        else{
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_yakit_turu_id IN(Select yakit_turu_id from tbl_yakit_turu where yakit_turu='"+yakitT+"')";
        }
        
        try(ResultSet rs =stm.executeQuery(query)){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            c.close();
        
        }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        }
    }//GEN-LAST:event_cmb_yakit_turuActionPerformed

    private void cmb_vites_turuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_vites_turuActionPerformed
        String vitesT=cmb_vites_turu.getSelectedItem().toString();
        String query="";
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        if(cb_az.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_vites_turu_id IN(Select vites_turu_id from tbl_vites_turu where vites_turu='"+vitesT+"')"
                    + "ORDER BY araba_id ASC";
        }   
        else if(cb_za.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_vites_turu_id IN(Select vites_turu_id from tbl_vites_turu where vites_turu='"+vitesT+"')"
                    + "ORDER BY araba_id DESC";
        }
        else{
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_vites_turu_id IN(Select vites_turu_id from tbl_vites_turu where vites_turu='"+vitesT+"')";
        }
        try(ResultSet rs =stm.executeQuery(query)){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            c.close();
        
        }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        }
        
    }//GEN-LAST:event_cmb_vites_turuActionPerformed

    private void cmb_renkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_renkActionPerformed
        String renk=cmb_renk.getSelectedItem().toString();
        String query="";
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        if(cb_az.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_renk_id IN(Select renk_id from tbl_renk where renk='"+renk+"')"
                    + "ORDER BY araba_id ASC";
        }   
        else if(cb_za.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_renk_id IN(Select renk_id from tbl_renk where renk='"+renk+"')"
                    + "ORDER BY araba_id DESC";
        } 
        else{
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_renk_id IN(Select renk_id from tbl_renk where renk='"+renk+"')";
        }
        try(ResultSet rs =stm.executeQuery(query)){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            c.close();
        
        }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        }
    }//GEN-LAST:event_cmb_renkActionPerformed

    private void cmb_tarihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tarihActionPerformed
        String tarih=cmb_tarih.getSelectedItem().toString();
        String query="Select * from tbl_araba";
        String bugün;
        Date now=new Date();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        Date d;
        
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        if(tarih=="son 24 saat"){
            //string formatında bugün
            bugün=sdf.format(now);
            
            //query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN(Select ilan_araba_id from tbl_ilan where ilan_tarih<")";
            
        }
        else if(tarih=="son 1 hafta"){
            
        }
        else if(tarih=="son 1 ay"){
            
        }
           
        try(ResultSet rs =stm.executeQuery(query)){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            c.close();
        
        }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(filtrele.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(filtrele.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmb_tarihActionPerformed

    private void cb_azActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_azActionPerformed
        cb_za.setSelected(false);
    }//GEN-LAST:event_cb_azActionPerformed

    private void cb_zaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_zaActionPerformed
        cb_az.setSelected(false);
    }//GEN-LAST:event_cb_zaActionPerformed

    private void btn_f_belirleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_f_belirleActionPerformed
        float min=Float.parseFloat(txt_f_min.getText()),max=Float.parseFloat(txt_f_max.getText());
        String query="";
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        if(cb_az.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN(Select ilan_araba_id from tbl_ilan where ilan_fiyat>='"
                    +min +"' AND ilan_fiyat<='"+max+"') ORDER BY araba_id ASC";
        }   
        else if(cb_za.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN(Select ilan_araba_id from tbl_ilan where ilan_fiyat>='"
                    +min +"' AND ilan_fiyat<='"+max+"') ORDER BY araba_id DESC";
        } 
        else{
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN(Select ilan_araba_id from tbl_ilan where ilan_fiyat>='"
                    +min +"' AND ilan_fiyat<='"+max+"')";
        }
        try(ResultSet rs =stm.executeQuery(query)){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            c.close();
        
        }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        }
        
        
    }//GEN-LAST:event_btn_f_belirleActionPerformed

    private void btn_km_belirleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_km_belirleActionPerformed
        int min=Integer.parseInt(txt_km_min.getText()),max=Integer.parseInt(txt_km_max.getText());
        String query="";
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        if(cb_az.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN(Select ilan_araba_id from tbl_ilan where ilan_km>='"
                    +min +"' AND ilan_fiyat<='"+max+"') ORDER BY araba_id ASC";
        }   
        else if(cb_za.isSelected()){
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN(Select ilan_araba_id from tbl_ilan where ilan_km>='"
                    +min +"' AND ilan_fiyat<='"+max+"') ORDER BY araba_id DESC";
        } 
        else{
            query="Select araba_id,araba_marka,araba_model from tbl_araba where araba_id IN(Select ilan_araba_id from tbl_ilan where ilan_km>='"
                    +min +"' AND ilan_fiyat<='"+max+"')";
        }
        try(ResultSet rs =stm.executeQuery(query)){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            c.close();
        
        }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Filtreleme başarısız.");
        }
    }//GEN-LAST:event_btn_km_belirleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(filtrele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(filtrele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(filtrele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(filtrele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new filtrele().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_f_belirle;
    private javax.swing.JButton btn_filtrele;
    private javax.swing.JButton btn_km_belirle;
    private javax.swing.JButton btn_veri_tabani_goruntule;
    private javax.swing.JCheckBox cb_az;
    private javax.swing.JCheckBox cb_za;
    private javax.swing.JComboBox<String> cmb_renk;
    private javax.swing.JComboBox<String> cmb_sehir;
    private javax.swing.JComboBox<String> cmb_tarih;
    private javax.swing.JComboBox<String> cmb_vites_turu;
    private javax.swing.JComboBox<String> cmb_yakit_turu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_1;
    private javax.swing.JLabel lbl_2;
    private javax.swing.JLabel lbl_3;
    private javax.swing.JLabel lbl_4;
    private javax.swing.JLabel lbl_5;
    private javax.swing.JLabel lbl_6;
    private javax.swing.JLabel lbl_7;
    private javax.swing.JLabel lbl_8;
    private javax.swing.JLabel lbl_9;
    private javax.swing.JLabel lbl_filtrele;
    private javax.swing.JLabel lbl_resim;
    private javax.swing.JTable tbl_tablolar;
    private javax.swing.JTextField txt_f_max;
    private javax.swing.JTextField txt_f_min;
    private javax.swing.JTextField txt_km_max;
    private javax.swing.JTextField txt_km_min;
    // End of variables declaration//GEN-END:variables
}
