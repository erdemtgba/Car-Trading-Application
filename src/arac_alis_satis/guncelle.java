/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arac_alis_satis;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author user
 */
public class guncelle extends javax.swing.JFrame {

    /**
     * Creates new form guncelle
     */
    public guncelle() {
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_resim = new javax.swing.JLabel();
        lbl_kayit_guncelle = new javax.swing.JLabel();
        btn_guncelle = new javax.swing.JButton();
        lbl_tablo_sec = new javax.swing.JLabel();
        cmb_tablolar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_tablolar = new javax.swing.JTable();
        lbl_4 = new javax.swing.JLabel();
        txt_7 = new javax.swing.JTextField();
        lbl_5 = new javax.swing.JLabel();
        lbl_6 = new javax.swing.JLabel();
        lbl_7 = new javax.swing.JLabel();
        txt_1 = new javax.swing.JTextField();
        txt_2 = new javax.swing.JTextField();
        txt_3 = new javax.swing.JTextField();
        txt_4 = new javax.swing.JTextField();
        lbl_1 = new javax.swing.JLabel();
        lbl_2 = new javax.swing.JLabel();
        txt_5 = new javax.swing.JTextField();
        lbl_3 = new javax.swing.JLabel();
        txt_6 = new javax.swing.JTextField();

        lbl_resim.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\arac_alis_satis\\if_10_2135930.png")); // NOI18N

        lbl_kayit_guncelle.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        lbl_kayit_guncelle.setForeground(new java.awt.Color(51, 51, 51));
        lbl_kayit_guncelle.setText("KAYIT GÜNCELLEME");

        btn_guncelle.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btn_guncelle.setForeground(new java.awt.Color(51, 51, 51));
        btn_guncelle.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\arac_alis_satis\\if_update_172618.png")); // NOI18N
        btn_guncelle.setText("GÜNCELLE");
        btn_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guncelleActionPerformed(evt);
            }
        });

        lbl_tablo_sec.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_tablo_sec.setForeground(new java.awt.Color(51, 51, 51));
        lbl_tablo_sec.setText("Tablo seç : ");

        cmb_tablolar.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmb_tablolar.setForeground(new java.awt.Color(51, 51, 51));
        cmb_tablolar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tbl_ilan", "tbl_araba", "tbl_renk", "tbl_sehir", "tbl_vites_turu", "tbl_yakit_turu" }));
        cmb_tablolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_tablolarActionPerformed(evt);
            }
        });

        tbl_tablolar.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        tbl_tablolar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_tablolarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_tablolar);

        lbl_4.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_4.setForeground(new java.awt.Color(51, 51, 51));
        lbl_4.setText("ilan_km       : ");

        txt_7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        lbl_5.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_5.setForeground(new java.awt.Color(51, 51, 51));
        lbl_5.setText("ilan_tarih(yy/aa/gg) : ");

        lbl_6.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_6.setForeground(new java.awt.Color(51, 51, 51));
        lbl_6.setText("ilan_araba_id : ");

        lbl_7.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_7.setForeground(new java.awt.Color(51, 51, 51));
        lbl_7.setText("ilan_sehir_id : ");

        txt_1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        txt_2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        txt_3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        txt_4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        lbl_1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_1.setForeground(new java.awt.Color(51, 51, 51));
        lbl_1.setText("ilan_id       : ");

        lbl_2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_2.setForeground(new java.awt.Color(51, 51, 51));
        lbl_2.setText("ilan_adı      : ");

        txt_5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        lbl_3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lbl_3.setForeground(new java.awt.Color(51, 51, 51));
        lbl_3.setText("ilan_fiyat    : ");

        txt_6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        txt_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(lbl_tablo_sec)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmb_tablolar, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_resim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_kayit_guncelle))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(8, 8, 8)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbl_1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lbl_2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lbl_3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(lbl_4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(lbl_5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lbl_6, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbl_7, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_7, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btn_guncelle, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_resim, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lbl_kayit_guncelle)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tablo_sec)
                    .addComponent(cmb_tablolar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guncelleActionPerformed
        //güncelleme
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        PreparedStatement pst;
        
        int row=tbl_tablolar.getSelectedRow();
        String value=tbl_tablolar.getModel().getValueAt(row,0).toString();
        
        if(cmb_tablolar.getSelectedItem().toString()=="tbl_ilan"){
            float fiy;
            String temp;
            String query="update tbl_ilan set ilan_adi=?,ilan_fiyat=?,ilan_km=?,ilan_tarih=?,ilan_araba_id=?,ilan_sehir_id=? where ilan_id="
                +"'"+value+"'";
            pst=c.prepareStatement(query);
            pst.setString(1,txt_2.getText());
            fiy=Float.parseFloat(txt_3.getText());
            temp=Float.toString(fiy);
            pst.setString(2, temp);
            pst.setString(3, txt_4.getText());
            pst.setString(4, txt_5.getText());
            pst.setString(5, txt_6.getText());
            pst.setString(6, txt_7.getText());
            //veritabanından güncelleme 
            pst.executeUpdate();
            
            //tbl_tabloların güncellenmesi
            try(ResultSet rs =stm.executeQuery("Select * from tbl_ilan")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] rows=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    rows[j-1]=rs.getObject(j);
                tm.addRow(rows);
            }
            
            tbl_tablolar.setModel(tm);
        }
            
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_araba"){
            String query="update tbl_araba set araba_marka=?,araba_model=?,araba_vites_turu_id=?,araba_yakit_turu_id=?,araba_renk_id=? where araba_id="
                +"'"+value+"'";
            pst=c.prepareStatement(query);
            pst.setString(1, txt_2.getText());
            pst.setString(2, txt_3.getText());
            pst.setString(3, txt_4.getText());
            pst.setString(4, txt_5.getText());
            pst.setString(5, txt_6.getText());
            pst.executeUpdate();
            
            try(ResultSet rs =stm.executeQuery("Select * from tbl_araba")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] rows=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    rows[j-1]=rs.getObject(j);
                tm.addRow(rows);
            }
            
            tbl_tablolar.setModel(tm);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_renk"){
            String query="update tbl_renk set renk=? where renk_id="
                +"'"+value+"'";
            pst=c.prepareStatement(query);
            pst.setString(1, txt_2.getText());
            
            pst.executeUpdate();
            
            try(ResultSet rs =stm.executeQuery("Select * from tbl_renk")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] rows=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    rows[j-1]=rs.getObject(j);
                tm.addRow(rows);
            }
            
            tbl_tablolar.setModel(tm);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_sehir"){
            String query="update tbl_sehir set sehir=? where sehir_id="
                +"'"+value+"'";
            pst=c.prepareStatement(query);
            pst.setString(1, txt_2.getText());
            pst.setString(2, txt_3.getText());
            pst.executeUpdate();
            
            try(ResultSet rs =stm.executeQuery("Select * from tbl_sehir")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] rows=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    rows[j-1]=rs.getObject(j);
                tm.addRow(rows);
            }
            
            tbl_tablolar.setModel(tm);
        }
            
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_vites_turu"){
            String query="update tbl_vites_turu set vites_turu=? where vites_turu_id="
                +"'"+value+"'";
            pst=c.prepareStatement(query);
            pst.setString(1, txt_2.getText());
            pst.executeUpdate();
            
            try(ResultSet rs =stm.executeQuery("Select * from tbl_vites_turu")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] rows=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    rows[j-1]=rs.getObject(j);
                tm.addRow(rows);
            }
            
            tbl_tablolar.setModel(tm);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_yakit_turu"){
            String query="update tbl_yakit_turu set yakit_turu=? where yakit_turu_id="
                +"'"+value+"'";
            pst=c.prepareStatement(query);
            pst.setString(1, txt_2.getText());
            pst.executeUpdate();
            
            try(ResultSet rs =stm.executeQuery("Select * from tbl_yakit_turu")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] rows=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    rows[j-1]=rs.getObject(j);
                tm.addRow(rows);
            }
            
            tbl_tablolar.setModel(tm);
        }
        }
        
        JOptionPane.showMessageDialog(null,"Kayıt güncelleme işlemi başarılı.");
        
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Kayıt güncelleme işlemi başarısız.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Kayıt güncelleme işlemi başarısız.");
        }
        
        
    }//GEN-LAST:event_btn_guncelleActionPerformed

    private void cmb_tablolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tablolarActionPerformed
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
        
        
        if(cmb_tablolar.getSelectedItem().toString()=="tbl_ilan"){
           try(ResultSet rs =stm.executeQuery("Select * from tbl_ilan")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            
            //text ve labelların düzenlemesi
                lbl_1.setText("ilan_id       : ");
                lbl_2.setText("ilan_adı      : ");
                lbl_3.setVisible(true);
                lbl_3.setText("ilan_fiyat    : ");
                lbl_4.setVisible(true);
                lbl_4.setText("ilan_km       : ");
                lbl_5.setVisible(true);
                lbl_5.setText("ilan_tarih(yy/aa/gg) : ");
                lbl_6.setVisible(true);
                lbl_6.setText("ilan_araba_id : ");
                lbl_7.setVisible(true);
                lbl_7.setText("ilan_sehir_id : ");
                
                txt_1.setText("");
                txt_1.setVisible(true);
                txt_2.setText("");
                txt_2.setVisible(true);
                txt_3.setText("");
                txt_3.setVisible(true);
                txt_4.setText("");
                txt_4.setVisible(true);
                txt_5.setText("");
                txt_5.setVisible(true);
                txt_6.setText("");
                txt_6.setVisible(true);
                txt_7.setText("");
                txt_7.setVisible(true);
                
        }
           
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_araba"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_araba")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            
            lbl_1.setText("araba_id            : ");
            lbl_2.setText("araba_marka         : ");
            lbl_3.setVisible(true);
            lbl_3.setText("araba_model         : ");
            lbl_4.setVisible(true);
            lbl_4.setText("araba_vites_turu_id : ");
            lbl_5.setVisible(true);
            lbl_5.setText("araba_yakit_turu_id : ");
            lbl_6.setVisible(true);
            lbl_6.setText("araba_renk_id       : ");
            lbl_7.setVisible(false);
            
            txt_1.setText("");
            txt_1.setVisible(true);
            txt_2.setText("");
            txt_2.setVisible(true);
            txt_3.setText("");
            txt_3.setVisible(true);
            txt_4.setText("");
            txt_4.setVisible(true);
            txt_5.setText("");
            txt_5.setVisible(true);
            txt_6.setText("");
            txt_6.setVisible(true);
            txt_7.setText("");
            txt_7.setVisible(false);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_renk"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_renk")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            
            lbl_1.setText("renk_id : ");
            lbl_2.setText("renk    : ");
            lbl_3.setVisible(false);
            lbl_4.setVisible(false);
            lbl_5.setVisible(false);
            lbl_6.setVisible(false);
            lbl_7.setVisible(false);
            
            txt_1.setText("");
            txt_1.setVisible(true);
            txt_2.setText("");
            txt_2.setVisible(true);
            txt_3.setText("");
            txt_3.setVisible(false);
            txt_4.setText("");
            txt_4.setVisible(false);
            txt_5.setText("");
            txt_5.setVisible(false);
            txt_6.setText("");
            txt_6.setVisible(false);
            txt_7.setText("");
            txt_7.setVisible(false);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_sehir"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_sehir")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            
            lbl_1.setText("sehir_id : ");
            lbl_2.setText("sehir    : ");
            lbl_3.setVisible(false);
            lbl_4.setVisible(false);
            lbl_5.setVisible(false);
            lbl_6.setVisible(false);
            lbl_7.setVisible(false);
            
            txt_1.setText("");
            txt_1.setVisible(true);
            txt_2.setText("");
            txt_2.setVisible(true);
            txt_3.setText("");
            txt_3.setVisible(false);
            txt_4.setText("");
            txt_4.setVisible(false);
            txt_5.setText("");
            txt_5.setVisible(false);
            txt_6.setText("");
            txt_6.setVisible(false);
            txt_7.setText("");
            txt_7.setVisible(false);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_vites_turu"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_vites_turu")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            
            lbl_1.setText("vites_turu_id : ");
            lbl_2.setText("vites_turu    : ");
            lbl_3.setVisible(false);
            lbl_4.setVisible(false);
            lbl_5.setVisible(false);
            lbl_6.setVisible(false);
            lbl_7.setVisible(false);
            
            txt_1.setText("");
            txt_1.setVisible(true);
            txt_2.setText("");
            txt_2.setVisible(true);
            txt_3.setText("");
            txt_3.setVisible(false);
            txt_4.setText("");
            txt_4.setVisible(false);
            txt_5.setText("");
            txt_5.setVisible(false);
            txt_6.setText("");
            txt_6.setVisible(false);
            txt_7.setText("");
            txt_7.setVisible(false);
        }
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_yakit_turu"){
            try(ResultSet rs =stm.executeQuery("Select * from tbl_yakit_turu")){
            int colCount=rs.getMetaData().getColumnCount();
            DefaultTableModel tm=new DefaultTableModel();
            for(int i=1;i<=colCount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i));
            while(rs.next()){
                Object[] row=new Object[colCount];
                for(int j=1;j<=colCount;j++)
                    row[j-1]=rs.getObject(j);
                tm.addRow(row);
            }
            tbl_tablolar.setModel(tm);
            
            lbl_1.setText("yakit_turu_id : ");
            lbl_2.setText("yakit_turu    : ");
            lbl_3.setVisible(false);
            lbl_4.setVisible(false);
            lbl_5.setVisible(false);
            lbl_6.setVisible(false);
            lbl_7.setVisible(false);
            
            txt_1.setText("");
            txt_1.setVisible(true);
            txt_2.setText("");
            txt_2.setVisible(true);
            txt_3.setText("");
            txt_3.setVisible(false);
            txt_4.setText("");
            txt_4.setVisible(false);
            txt_5.setText("");
            txt_5.setVisible(false);
            txt_6.setText("");
            txt_6.setVisible(false);
            txt_7.setText("");
            txt_7.setVisible(false);
        }
        }
        c.close();
        } catch (ClassNotFoundException ex ) {
            Logger.getLogger(veri_tabani_goster.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(veri_tabani_goster.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmb_tablolarActionPerformed

    private void txt_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_6ActionPerformed

    private void tbl_tablolarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_tablolarMouseClicked
        // TODO add your handling code here:
        //ilgili satırın textfieldlarda gösterilmesini yapıyor
        try{
        //query seçilen tabloya göre oluştu
        Class.forName("com.mysql.jdbc.Connection");
        Connection c=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/aaaa","root","170201097");
        Statement stm=(Statement)c.createStatement(); 
       
        int row=tbl_tablolar.getSelectedRow();
        String value;
        
        if(cmb_tablolar.getSelectedItem().toString()=="tbl_ilan"){
            value=tbl_tablolar.getModel().getValueAt(row,0).toString();
            txt_1.setText(value);
            txt_1.enable(false);
            value=tbl_tablolar.getModel().getValueAt(row,1).toString();
            txt_2.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,2).toString();
            txt_3.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,3).toString();
            txt_4.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,4).toString();
            txt_5.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,5).toString();
            txt_6.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,6).toString();
            txt_7.setText(value);
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_araba"){
            value=tbl_tablolar.getModel().getValueAt(row,0).toString();
            txt_1.setText(value);
            txt_1.enable(false);
            value=tbl_tablolar.getModel().getValueAt(row,1).toString();
            txt_2.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,2).toString();
            txt_3.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,3).toString();
            txt_4.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,4).toString();
            txt_5.setText(value);
            value=tbl_tablolar.getModel().getValueAt(row,5).toString();
            txt_6.setText(value);
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_renk"){
            value=tbl_tablolar.getModel().getValueAt(row,0).toString();
            txt_1.setText(value);
            txt_1.enable(false);
            value=tbl_tablolar.getModel().getValueAt(row,1).toString();
            txt_2.setText(value);
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_sehir"){
            value=tbl_tablolar.getModel().getValueAt(row,0).toString();
            txt_1.setText(value);
            txt_1.enable(false);
            value=tbl_tablolar.getModel().getValueAt(row,1).toString();
            txt_2.setText(value);
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_vites_turu"){
            value=tbl_tablolar.getModel().getValueAt(row,0).toString();
            txt_1.setText(value);
            txt_1.enable(false);
            value=tbl_tablolar.getModel().getValueAt(row,1).toString();
            txt_2.setText(value);
        }
        else if(cmb_tablolar.getSelectedItem().toString()=="tbl_yakit_turu"){
            value=tbl_tablolar.getModel().getValueAt(row,0).toString();
            txt_1.setText(value);
            txt_1.enable(false);
            value=tbl_tablolar.getModel().getValueAt(row,1).toString();
            txt_2.setText(value);
        }
        c.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(guncelle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(guncelle.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_tbl_tablolarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new guncelle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guncelle;
    private javax.swing.JComboBox<String> cmb_tablolar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_1;
    private javax.swing.JLabel lbl_2;
    private javax.swing.JLabel lbl_3;
    private javax.swing.JLabel lbl_4;
    private javax.swing.JLabel lbl_5;
    private javax.swing.JLabel lbl_6;
    private javax.swing.JLabel lbl_7;
    private javax.swing.JLabel lbl_kayit_guncelle;
    private javax.swing.JLabel lbl_resim;
    private javax.swing.JLabel lbl_tablo_sec;
    private javax.swing.JTable tbl_tablolar;
    private javax.swing.JTextField txt_1;
    private javax.swing.JTextField txt_2;
    private javax.swing.JTextField txt_3;
    private javax.swing.JTextField txt_4;
    private javax.swing.JTextField txt_5;
    private javax.swing.JTextField txt_6;
    private javax.swing.JTextField txt_7;
    // End of variables declaration//GEN-END:variables
}
